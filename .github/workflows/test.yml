name: test
on:
  push:
    tags:
      - v*
    branches:
      - main
      - release-*
  pull_request:
  schedule:
    # Runs at 00:00 UTC every Monday
    - cron: '0 0 * * 1'
permissions:
  contents: read

jobs:
  cgroup-v2:
    name: "cgroup v2 (Ubuntu 24.04)"
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.24.x, 1.25.x]
        race: ["-race", ""]
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}
    - run: go test -timeout 3m ${{ matrix.race }} -v ./...

  cgroup-v1:
    name: "cgroup v1 (AlmaLinux 8)"
    timeout-minutes: 20
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v5

    - uses: lima-vm/lima-actions/setup@v1
      id: lima-actions-setup

    - uses: actions/cache@v4
      with:
        path: ~/.cache/lima
        key: lima-${{ steps.lima-actions-setup.outputs.version }}

    - name: "Start VM"
      # --plain is set to disable file sharing, port forwarding, built-in containerd, etc. for faster start up
      run: limactl start --plain --name=default template://almalinux-8

    - name: "Initialize VM"
      run: |
        set -eux -o pipefail
        limactl cp -r . default:/tmp/cgroups
        lima sudo dnf install -y golang

    - name: "Run unit tests"
      run: LIMA_WORKDIR=/tmp/cgroups lima sudo GOTOOLCHAIN=auto go test -v ./...

  all-done:
    needs:
      - cgroup-v2
      - cgroup-v1
    runs-on: ubuntu-24.04
    steps:
    - run: echo "All jobs completed"
